SHELL=bash
TARGET:=tn9k_count_diag # available targets are in the targets folder.

SV2V_CMD=docker run --rm -v $$(pwd):/app --workdir=/app davidsiaw/sv2v sv2v
SYSTEM_VERILOG_FILES=$(shell find src -type f -name '*.sv')
SV2VED_SV_FILES=$(patsubst src/%.sv,obj/sv2ved/%.v,$(SYSTEM_VERILOG_FILES))
VERILOG_FILES=$(shell find src -type f -name '*.v') $(SV2VED_SV_FILES)
SRC_DIRS=$(shell find src -type d -print)

# utility:
# use like this: $(subst totee,my_output_file,$(TEE))
TEE=> >(tee -a obj/totee.out.log) 2> >(tee -a obj/totee.err.log >&2) 

TARGET_DIR=obj/args

all: apicula gowin

# produce defines for verilog from target
obj/defines: $(TARGET_DIR)/defines
	mkdir -p $@
	for i in $(shell cat $<); \
	do  \
	  echo "" > "$@/$$i"; \
	done

obj/sv2ved/%.v.gen.sh: src/%.sv
	mkdir -p $(shell dirname "$@")
	echo "#!/bin/sh" > $@
	echo "$(SV2V_CMD) \\" >> $@
	echo $< >> $@

# pre-process systemverilog down to verilog
obj/sv2ved/%.v: obj/sv2ved/%.v.gen.sh src/%.sv
	echo "// Generated by Makefile using sv2v" > $@
	sh $< >> $@

.SECONDARY: $(SV2VED_SV_FILES)

$(TARGET_DIR)/%: targets/$(TARGET)
	mkdir -p $(TARGET_DIR)
	cat targets/$(TARGET) | while read line; \
	do \
	  IFS='=' read -ra toks <<< "$$line"; \
	  echo "$${toks[1]}" > "$(TARGET_DIR)/$${toks[0]}"; \
	done

clean:
	rm -rf obj

.PHONY: clean all unpack_target

include mklib/*.mk
